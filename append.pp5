fun append(xSyS : (int list) * (int list)) : int list =
	match fst xSyS with
		| [] -> snd xSyS
		| x::xs -> x::append((xs, snd xSyS))

fun nth(pair: int * (int list)) : int =
	match (snd pair) with 
		| [] -> 1 div 0
		| y::ys ->
			let n = (fst pair) in 
				if n = 0 then y else nth(((n-1), ys))

in nth((6, append([0,1,2,3,4] : int list,[5,6,7,8] : int list)))
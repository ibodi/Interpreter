fun aux(xSyS: int list * int list): int list =
	match snd xSyS with
		| [] -> fst xSyS
		| y::ys -> aux((y::(fst xSyS), ys))
fun reverse(xs: int list): int list = aux(([] : int list, xs))
fun head(xs : int list) : int = 
	match xs with
		| [] -> 1 div 0
		| y :: ys -> y

in head(reverse([3,4,5,6,7,8]: int list))